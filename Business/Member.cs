/*------------------------------------------------------------------------
<generated>
     This code was generated by The NuSoft Framework v3.0
     Generated at 24/06/2011 11:26:22 PM.

     The NuSoft Framework is an open source project developed
     by NuSoft Solutions (http://www.nusoftsolutions.com).
     The latest version of the framework templates and detailed license
     is available at http://www.codeplex.com/NuSoftFramework.

     This file will NOT be overwritten when regenerating your code.
</generated>
------------------------------------------------------------------------*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;
using System.Text;

using DocketPlace.Business.Framework;

namespace DocketPlace.Business
{
	/// <summary>
	/// This object represents the properties and methods of a Member.
	/// </summary>
	public partial class Member : EntityBase
	{
		public decimal averageSale
		{
			get 
			{
				if (this.frequency != 0)
				{
					return this.total_revenue / this.frequency;
				}
				else
				{
					return 0;	
				}
			}
		}
		
		public static Member GetMemberByStoreAndLocalID(string localCustomerID, int store_id)
		{
			SqlParameter p = new SqlParameter("@local_customer_id", localCustomerID);
			SqlParameter q = new SqlParameter("@store_id", store_id);
			
			List<SqlParameter> parameters = new List<SqlParameter>();
			parameters.Add(p);
			parameters.Add(q);

			string where = "where local_customer_id = @local_customer_id and store_id = @store_id ";

			EntityList<Member> members = Member.GetMembers(where, parameters); 

			if (members.Count == 1)
			{
				return members[0];
			}
			else
			{
				return null;
			}
		}

		public static EntityList<Member> GetMembersByCompanyAndLocalID(string localCustomerID, int companyID)
		{
			SqlParameter p = new SqlParameter("@local_customer_id", localCustomerID);
			SqlParameter q = new SqlParameter("@company_id", companyID);

			List<SqlParameter> parameters = new List<SqlParameter>();
			parameters.Add(p);
			parameters.Add(q);

			string where = "where local_customer_id = @local_customer_id and company_id = @company_id ";

			EntityList<Member> members = Member.GetMembers(where, parameters);

			return members;
		}

		public static EntityList<Member> GetMembersByCompanyAndBarcodeID(string localBarcodeID, int companyID)
		{
			SqlParameter p = new SqlParameter("@local_barcode_id", localBarcodeID);
			SqlParameter q = new SqlParameter("@company_id", companyID);

			List<SqlParameter> parameters = new List<SqlParameter>();
			parameters.Add(p);
			parameters.Add(q);

			string where = "where local_barcode_id = @local_barcode_id and company_id = @company_id ";

			EntityList<Member> members = Member.GetMembers(where, parameters);
			return members;
		}
	}
}
