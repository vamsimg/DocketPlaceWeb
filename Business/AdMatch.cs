/*------------------------------------------------------------------------
<generated>
     This code was generated by The NuSoft Framework v3.0
     Generated at 28/12/2009 6:18:38 PM.

     The NuSoft Framework is an open source project developed
     by NuSoft Solutions (http://www.nusoftsolutions.com).
     The latest version of the framework templates and detailed license
     is available at http://www.codeplex.com/NuSoftFramework.

     This file will NOT be overwritten when regenerating your code.
</generated>
------------------------------------------------------------------------*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;
using System.Text;
using System.Linq;

using DocketPlace.Business.Framework;

namespace DocketPlace.Business
{
	/// <summary>
	/// This object represents the properties and methods of a AdMatch.
	/// </summary>
	public partial class AdMatch : EntityBase
     {

          #region Public Properties
          
		public bool is_own_admatch
		{
			get
			{
				if (this.store_.company_id == this.adgroup_.campaign_.company_id)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
		}

          public int total_ads_wanted
          {
               get
               {    
                    return this.RequestedAdsByadmatch_.Sum(r => r.num_wanted);                    
               }
          }

		public int total_ads_printed
		{
			get
			{
				return this.RequestedAdsByadmatch_.Sum(r => r.num_printed);
			}
		}

          public int ad_price
          {
               get
               {
                    bool is_own_store = false;
                    bool is_retailer = false;

                    int seller_id = this.store_.company_id;
                    int buyer_id = this.adgroup_.campaign_.company_id;


                    is_retailer = this.adgroup_.campaign_.company_.is_retailer;

                    if (seller_id == buyer_id)
                    {
                         is_own_store = true;
                    }

                    if (is_own_store)
                    {
                         return 1;
                    }
                    else if (is_retailer)
                    {
                         return 5;
                    }
                    else
                    {
                         return 10;
                    }
               }
          }

          public double total_budget
          {
               get 
               {
                    return (total_ads_wanted * ad_price)/100;
               }
          }

          #endregion

          public void ApproveAdMatch()
          {
               this.is_approved = true;
               this.is_rejected = false;
               this.Save();
               foreach (RequestedAd requestedad in this.RequestedAdsByadmatch_)
               {
                    requestedad.is_active = true;
                    requestedad.Save();
               }
          }

          public void RejectAdMatch()
          {
               this.is_approved = false;
               this.is_rejected = true;
               this.Save();
          }

          public void PublishAdMatch()
          {
               this.is_published = true;
               this.Save();

               if (is_own_admatch)
               {
                    ApproveAdMatch();
               }
          }

          public static EntityList<AdMatch> GetPendingMatches(int store_id)
          {
               SqlParameter p = new SqlParameter("@store_id", store_id);

               string where = "where store_id = @store_id and is_published = 1 and is_approved = 0 and is_rejected = 0 and is_active = 1";

               EntityList<AdMatch> admatches = GetAdMatches(where, p);

               return admatches;
          }
     }
}
