/*------------------------------------------------------------------------
<generated>
     This code was generated by The NuSoft Framework v3.0
     Generated at 28/12/2009 6:18:48 PM.

     The NuSoft Framework is an open source project developed
     by NuSoft Solutions (http://www.nusoftsolutions.com).
     The latest version of the framework templates and detailed license
     is available at http://www.codeplex.com/NuSoftFramework.

     This file will NOT be overwritten when regenerating your code.
</generated>
------------------------------------------------------------------------*/

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;
using System.Text;

using DocketPlace.Business.Framework;

namespace DocketPlace.Business
{
	/// <summary>
	/// This object represents the properties and methods of a Admin.
	/// </summary>
	public partial class Admin : EntityBase
	{
          #region Public Properties



          public string full_name
          {

               get { return this.first_name + " " + this.last_name; }

          }

          #endregion





          /// <summary>
          /// Gets an list of admins from the database with a specific email. DB unique contstrain should ensure only 1 item returned.
          /// </summary>
          /// <param name="email"></param>
          /// <returns></returns>
          public static Admin GetAdminsByEmail(string email)
          {
               SqlParameter p = new SqlParameter("@email", email);

               string where = "where email = @email ";

               EntityList<Admin> admins = Admin.GetAdmins(where, p);

               if (admins.Count == 1)
               {
                    return admins[0];
               }
               else
               {
                    return null;
               }

          }


          public void UpdatePassword(string new_password)
          {
               this.password_hash = BusinessHelper.computeSHAhash(new_password, this.creation_datetime);
               this.Save();
          }


          public string ResetPassword()
          {
               string new_password = System.IO.Path.ChangeExtension(System.IO.Path.GetRandomFileName(), null);

               try
               {
                    UpdatePassword(new_password);

               }
               catch (Exception ex)
               {
                    throw ex;
               }
               return new_password;

          }

          public static partial class AdminProperties
          {
               public const string full_name = "full_name";
          }

	}
}
